//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ScorepediaModel", "FK_scorepediaTeam_REF_scorepediaSport", "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApp.Models.Sport), "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApp.Models.Team), true)]

#endregion

namespace WebApp.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ScorepediaEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ScorepediaEntities object using the connection string found in the 'ScorepediaEntities' section of the application configuration file.
        /// </summary>
        public ScorepediaEntities() : base("name=ScorepediaEntities", "ScorepediaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScorepediaEntities object.
        /// </summary>
        public ScorepediaEntities(string connectionString) : base(connectionString, "ScorepediaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScorepediaEntities object.
        /// </summary>
        public ScorepediaEntities(EntityConnection connection) : base(connection, "ScorepediaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Player> Players
        {
            get
            {
                if ((_Players == null))
                {
                    _Players = base.CreateObjectSet<Player>("Players");
                }
                return _Players;
            }
        }
        private ObjectSet<Player> _Players;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sport> Sports
        {
            get
            {
                if ((_Sports == null))
                {
                    _Sports = base.CreateObjectSet<Sport>("Sports");
                }
                return _Sports;
            }
        }
        private ObjectSet<Sport> _Sports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Team>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Team> _Teams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Region> Regions
        {
            get
            {
                if ((_Regions == null))
                {
                    _Regions = base.CreateObjectSet<Region>("Regions");
                }
                return _Regions;
            }
        }
        private ObjectSet<Region> _Regions;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Players EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayers(Player player)
        {
            base.AddObject("Players", player);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSports(Sport sport)
        {
            base.AddObject("Sports", sport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Team team)
        {
            base.AddObject("Teams", team);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Regions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegions(Region region)
        {
            base.AddObject("Regions", region);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScorepediaModel", Name="Player")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Player : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Player object.
        /// </summary>
        /// <param name="playerId">Initial value of the PlayerId property.</param>
        /// <param name="playerName">Initial value of the PlayerName property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Player CreatePlayer(global::System.Int32 playerId, global::System.String playerName, global::System.DateTime createdDate)
        {
            Player player = new Player();
            player.PlayerId = playerId;
            player.PlayerName = playerName;
            player.CreatedDate = createdDate;
            return player;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerId
        {
            get
            {
                return _PlayerId;
            }
            set
            {
                if (_PlayerId != value)
                {
                    OnPlayerIdChanging(value);
                    ReportPropertyChanging("PlayerId");
                    _PlayerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlayerId");
                    OnPlayerIdChanged();
                }
            }
        }
        private global::System.Int32 _PlayerId;
        partial void OnPlayerIdChanging(global::System.Int32 value);
        partial void OnPlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PlayerName
        {
            get
            {
                return _PlayerName;
            }
            set
            {
                OnPlayerNameChanging(value);
                ReportPropertyChanging("PlayerName");
                _PlayerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PlayerName");
                OnPlayerNameChanged();
            }
        }
        private global::System.String _PlayerName;
        partial void OnPlayerNameChanging(global::System.String value);
        partial void OnPlayerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScorepediaModel", Name="Region")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Region : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Region object.
        /// </summary>
        /// <param name="regionId">Initial value of the RegionId property.</param>
        /// <param name="regionName">Initial value of the RegionName property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Region CreateRegion(global::System.Int16 regionId, global::System.String regionName, global::System.DateTime createdDate)
        {
            Region region = new Region();
            region.RegionId = regionId;
            region.RegionName = regionName;
            region.CreatedDate = createdDate;
            return region;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                if (_RegionId != value)
                {
                    OnRegionIdChanging(value);
                    ReportPropertyChanging("RegionId");
                    _RegionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegionId");
                    OnRegionIdChanged();
                }
            }
        }
        private global::System.Int16 _RegionId;
        partial void OnRegionIdChanging(global::System.Int16 value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegionName
        {
            get
            {
                return _RegionName;
            }
            set
            {
                OnRegionNameChanging(value);
                ReportPropertyChanging("RegionName");
                _RegionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RegionName");
                OnRegionNameChanged();
            }
        }
        private global::System.String _RegionName;
        partial void OnRegionNameChanging(global::System.String value);
        partial void OnRegionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScorepediaModel", Name="Sport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sport object.
        /// </summary>
        /// <param name="sportId">Initial value of the SportId property.</param>
        /// <param name="sportName">Initial value of the SportName property.</param>
        public static Sport CreateSport(global::System.Int16 sportId, global::System.String sportName)
        {
            Sport sport = new Sport();
            sport.SportId = sportId;
            sport.SportName = sportName;
            return sport;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 SportId
        {
            get
            {
                return _SportId;
            }
            set
            {
                if (_SportId != value)
                {
                    OnSportIdChanging(value);
                    ReportPropertyChanging("SportId");
                    _SportId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SportId");
                    OnSportIdChanged();
                }
            }
        }
        private global::System.Int16 _SportId;
        partial void OnSportIdChanging(global::System.Int16 value);
        partial void OnSportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportName
        {
            get
            {
                return _SportName;
            }
            set
            {
                OnSportNameChanging(value);
                ReportPropertyChanging("SportName");
                _SportName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportName");
                OnSportNameChanged();
            }
        }
        private global::System.String _SportName;
        partial void OnSportNameChanging(global::System.String value);
        partial void OnSportNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScorepediaModel", "FK_scorepediaTeam_REF_scorepediaSport", "Team")]
        public EntityCollection<Team> Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team>("ScorepediaModel.FK_scorepediaTeam_REF_scorepediaSport", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team>("ScorepediaModel.FK_scorepediaTeam_REF_scorepediaSport", "Team", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScorepediaModel", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        /// <param name="teamName">Initial value of the TeamName property.</param>
        /// <param name="sportId">Initial value of the SportId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Team CreateTeam(global::System.Int32 teamId, global::System.String teamName, global::System.Int16 sportId, global::System.DateTime createdDate)
        {
            Team team = new Team();
            team.TeamId = teamId;
            team.TeamName = teamName;
            team.SportId = sportId;
            team.CreatedDate = createdDate;
            return team;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                if (_TeamId != value)
                {
                    OnTeamIdChanging(value);
                    ReportPropertyChanging("TeamId");
                    _TeamId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TeamId");
                    OnTeamIdChanged();
                }
            }
        }
        private global::System.Int32 _TeamId;
        partial void OnTeamIdChanging(global::System.Int32 value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TeamName
        {
            get
            {
                return _TeamName;
            }
            set
            {
                OnTeamNameChanging(value);
                ReportPropertyChanging("TeamName");
                _TeamName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TeamName");
                OnTeamNameChanged();
            }
        }
        private global::System.String _TeamName;
        partial void OnTeamNameChanging(global::System.String value);
        partial void OnTeamNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 SportId
        {
            get
            {
                return _SportId;
            }
            set
            {
                OnSportIdChanging(value);
                ReportPropertyChanging("SportId");
                _SportId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportId");
                OnSportIdChanged();
            }
        }
        private global::System.Int16 _SportId;
        partial void OnSportIdChanging(global::System.Int16 value);
        partial void OnSportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScorepediaModel", "FK_scorepediaTeam_REF_scorepediaSport", "Sport")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("ScorepediaModel.FK_scorepediaTeam_REF_scorepediaSport", "Sport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("ScorepediaModel.FK_scorepediaTeam_REF_scorepediaSport", "Sport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("ScorepediaModel.FK_scorepediaTeam_REF_scorepediaSport", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("ScorepediaModel.FK_scorepediaTeam_REF_scorepediaSport", "Sport", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
